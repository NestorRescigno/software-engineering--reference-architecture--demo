# *********************************************************************
# *************                 IAG                       *************
# *************       by Software Engineering             *************
# *********************************************************************
# This action yaml represents the different steps to perform 
# for a deployment in environment 
# usage architecture reference workflow

# currently it is only possible to configure 
# two types of languages "java and angular"
# this example use java

name: CI
description: 'continuos integration and deployment microservice'
deploy:
  steps:
    - name: deploy 
      uses: https://github.com/Iberia-Ent/software-engineering--reference-architecture--workflow/blob/main/.github/action/action.yml
      ref: main
      with:
        project-name: "bestpratice"                                     # Product global name example: 'bestpratices' - require true, use in dns name
        lenguage-code: "java"                                           # lenguage programming code for example: java or angular - require true  
        ##### optional
        # testIntegration:                                              # run integration test, soap request or rest  default: false
        # testIntegration-path:                                         # test xml integration path default: '${{ github.workspace }}'
        ####
        scancode: false                                                 # control scan code default: false
        # sonarqube-host: ${{secrets.sonar_url}}                         # host control quality code with sonar - optional
        # sonarqube-user: ${{secrets.sonar_user}}                        # user control quality code with sonar - optional
        # sonarqube-token: ${{secrets.sonar_token}}                      # pwd control quality code with sonar - optional
        # sonarqube-client-version:                                     # client sonar-scanner use. see https://binaries.sonarsource.com/?prefix=Distribution/sonar-scanner-cli/
        #### configure to bestpractice account
        # use codeartifact for example
        codeartifact-allow: true                                        # active true repositorio codeartifact - required: true - default: false (nexus adopt)
        repository-DNS:  ${{secrets.codeartifact_url}}                   # host registry artifact - if codeArtifact allow then dns is example: my_domain-111122223333.d.codeartifact.us-west-2.amazonaws.com
        repository-user: ${{secrets.codeartifact_owner}}                 # user registry artifact - if codeArtifact allow then user is owner aws id.
        ### Disable because is codeArtifact
        # repository-token: ${{secrets.nexus_key}}                      # pass registry artifact - if codeArtifact allow then token is auto generate. input is empty
        aws-environment-name: "production"                              # Environment name for default: 'production'
        aws-environment-prefix: "pro"                                   # Environment prefix name for default: 'pro'
        aws-access-key: ${{secret.aws_access_key}}                      # access key aws publish environment ( example: Integration, preproduction, quality)
        aws-secret-acesss-key: ${{secrets.aws_secret_access_key}}       # secret access key aws publish environment ( example: Integration, preproduction, quality)
        aws-environment-dev-name: "development"                         # Development environment name for default: 'development'
        aws-environment-dev-prefix: "dev"                               # Development environment prefix name for default: 'dev'
        aws-access-key-dev: ${{secrets.aws_access_key}}                 # access key aws development environment
        aws-secret-acesss-key-dev: ${{secrets.aws_secret_access_key}}   # secret access key aws development environment
        ##### operational account: create and shared AMI
        aws-access-key-op: ${{secrets.aws_access_key}}                  # access key aws operational environment, this account containt shared image 
        aws-secret-acesss-key-op: ${{secrets.aws_secret_access_key}}    # secret access key aws operational environment, this account containt shared image
